package main

import (
	"encoding/json"
	"fmt"
	"net/http"
	"time"

	"github.com/gin-gonic/gin"
	"gorm.io/driver/sqlserver"
	"gorm.io/gorm"
)

type loginuser struct {
	ID          int        `json:"id"`
	Name        string     `json:"nameuse"`
	Password    string     `json:"pass"`
	Createlogin *time.Time `json:"Create_login"`
}

func main() {
	dsn := "sqlserver://sa:19022003@localhost:1433?database=QLBH"
	db, err := gorm.Open(sqlserver.Open(dsn), &gorm.Config{})

	if err != nil {
		fmt.Println(err)
		return
	}
	fmt.Println(db)

	fmt.Println("hello")
	now := time.Now().UTC()
	item := loginuser{
		ID:          1,
		Name:        "thang",
		Password:    "19022003",
		Createlogin: &now,
	}
	jsondata, err := json.Marshal(item)

	if err != nil {
		fmt.Println(err)
		return
	}
	fmt.Println(string(jsondata))

	r := gin.Default()

	v1 := r.Group("/V1")
	{
		items := v1.Group("/items")
		{
			items.POST("", func(c *gin.Context) {

			})

		}
	}

	r.GET("/ping", func(c *gin.Context) {
		c.JSON(http.StatusOK, gin.H{
			"message": item,
		})
	})
	r.Run()

}
func Create_login() func(c *gin.Context) {
	return func(c *gin.Context) {

	}
}
